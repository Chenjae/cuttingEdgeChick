<?xml version="1.0" encoding="UTF-8"?>
<!-- Sql Mapper -->
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.kosta.pamuk.model.mapper.StorageMapper">

	<insert id="registerStorage" parameterType="storageVO">
		insert into storage (storage_no, member_id, type, location_no) values
		(storage_seq.nextval, #{memberVO.memberId},#{type},#{locationNo})
	</insert>

	<select id="findStorageByMemberId" parameterType="string"
		resultType="storageVO">
		select storage_no, type, location_no from storage where member_id=#{value}
		order by storage_no
	</select>


	<!-- item과 category 연동하기 위한 resultMap추가해야할수도 -->
	<select id="getStoredItemByStorageNo" parameterType="int"
		resultType="storedItemVO">
		select stored_item_no, item_name,item_memo,
		to_char(expiry_date,'YYYY-MM-DD') as expiry_date,
		to_char(stored_date,'YYYY-MM-DD') as stored_date, qty from stored_item
		where storage_no=#{value}
	</select>

	<!-- 작성한 "getStoredItemByStorageNo"에서 작성한 것 불러와서 Update문 -->
	<update id="updateStoredItem"
		parameterType="storedItemVO">
		update STORED_ITEM set QTY= #{qty}, STORED_DATE=#{storedDate},
		EXPIRY_DATE=#{expiryDate} where stored_item_no=#{storedItemNo}
	</update>

	<!-- 체크박스에서 선택한 목록 삭제 Delete문 -->
	<delete id="deleteStoredItem" parameterType="int">
		delete from stored_item where stored_item_no=#{value}
	</delete>

	<!-- **추가** -->
	<insert id="storeItem" parameterType="storedItemVO">
		insert into stored_item (stored_item_no, storage_no, item_name, expiry_date,
		stored_date , qty)
		values (stored_item_seq.nextval, #{storageVO.storageNo}, #{itemName},
		#{expiryDate}, #{storedDate}, #{qty})
	</insert>
	
	
	<!-- 유통기한 임박 재료 표시 -->
	<select id="daysRemaining" parameterType="int" resultType="int">
		SELECT TRUNC(EXPIRY_DATE - SYSDATE) AS days from stored_item WHERE stored_item_no = #{value}
	</select>
	
	<!-- 07/14 추가 -->
	<select id="getTotalStoredItemList" parameterType="list"
		resultType="map">
		SELECT DISTINCT storage_no, LISTAGG(item_name, ',') WITHIN GROUP
		(ORDER BY expiry_date) OVER (PARTITION BY storage_no) AS item_list
		FROM (SELECT item_name, storage_no, expiry_date FROM stored_item WHERE
		storage_no IN
		<foreach collection="storageVOList" item="storage" open="("
			close=")" separator=",">
			#{storage.storageNo}
		</foreach>
		) ORDER BY storage_no
	</select>

	<!-- 07/14 추가 -->
	<select id="getTotalStoredItemList2" parameterType="string"
		resultType="string">
		SELECT DISTINCT LISTAGG(item_name, ',') WITHIN GROUP (ORDER BY item_name)
		FROM (SELECT DISTINCT item_name FROM stored_item WHERE storage_no IN
		(SELECT storage_no FROM storage WHERE member_id=#{value} ))
	</select>   
</mapper>
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
















