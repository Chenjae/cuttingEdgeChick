<?xml version="1.0" encoding="UTF-8"?>
<!-- Sql Mapper -->
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
	<mapper namespace="org.kosta.pamuk.model.mapper.RecipeMapper">
	
	<!-- resultMap setting -->
	<resultMap type="recipeVO" id="recipeRM">
 		<result column="member_id" property="memberVO.memberId"/>
 	</resultMap>
 	<resultMap type="recipeVO" id="recipeDetailRM" extends="recipeRM">
 		<result column="nick" property="memberVO.nick"/>
 	</resultMap>
	
	<!-- recipe 관련 insert문 -->
	<!-- recipe 게시물 작성 -->
	<insert id="postRecipe" parameterType="RecipeVO">
		<selectKey keyProperty="recipeNo" resultType="int"
			order="BEFORE">
			select recipe_seq.nextval from dual
		</selectKey>
		insert into recipe
		(recipe_no,member_id,recipe_name,write_date,category,recipe_thumbnail)
		values
		(#{recipeNo}, #{memberVO.memberId}, #{recipeName}, sysdate, 
		#{category}, #{recipeThumbnail})
	</insert>
	<!-- recipe 게시물의 세부 content(step) 작성 -->
	<insert id="postRecipeContent" parameterType="recipeContentVO">
		insert into
		recipe_content
		(recipe_no, step_no, step_title, content, image_path)
		values (#{recipeNo}, #{stepNo}, #{stepTitle}, #{content},
		#{imagePath})
	</insert>
	<!-- recipe에 사용되는 재료 작성 -->
	<insert id="postRecipeItem" parameterType="RecipeItemVO">
		insert into
		recipe_item
		(item_name, recipe_no, qty)
		values (#{itemName},
		#{recipeNo}, #{qty})
	</insert>

	<!-- recipe 관련 select문 -->
	<!-- count 개수 조회 -->
	<!-- recipe 게시물 수 조회 -->
	<select id="getTotalRecipeCount" resultType="int">
		select count(*) from recipe
	</select>
	<!-- 카테고리 별 recipe 게시물 수 조회 -->
	<select id="getRecipeCountByCategory" resultType="int">
		select count(*) from recipe where category=#{value}
	</select>
	<!-- 개별 recipe 게시물의 content 수 조회 -->
	<select id="getContentCountByRecipeNo" resultType="int">
		select
		count(*) from recipe_content where recipe_no=#{value}
	</select>
	<!-- 개별 recipe 게시물의 item 수 조회 -->
	<select id="getItemCountByRecipeNo" resultType="int">
		select count(*)
		from recipe_item where recipe_no=#{value}
	</select>

	<!-- recipe 게시물 Detail 조회 -->
	<!-- recipe 게시물의 detail을 조회 -->
	<sql id="selectRecipe">
		select recipe_no,member_id,recipe_name,write_date,category,recipe_thumbnail
		from recipe
	</sql>
	<select id="getRecipeDetailByRecipeNo" resultMap="recipeRM">
		<include refid="selectRecipe"/>
		where recipe_no = #{value}
	</select>
	<!-- recipe 게시물의 ItemList를 조회 -->
	<select id="getRecipeItemListByRecipeNo" resultType="RecipeItemVO">
		select item_name, qty
		from recipe_item
		where recipe_no = #{value}
	</select>
	<!-- recipe 게시물 ContentList를 조회 -->
	<select id="getRecipeContentListByRecipeNoOrderByStepNo" resultType="RecipeContentVO">
		select step_no, content, step_title, image_path
		from recipe_content
		where recipe_no = #{value}
		order by step_no
	</select>

	<!-- recipe 게시물의 리스트 조회 -->
	<!-- recipe 게시물의 List를 rowNumber로 조회 -->
	<select id="getAllRecipeListByRowNumber" resultMap="recipeDetailRM">
		SELECT rnum_view.*
		FROM (
			SELECT ROWNUM as rnum, recipe_view.*
			FROM
				(SELECT r.recipe_no, m.nick, r.recipe_name, hits, r.category, r.recipe_thumbnail
				FROM RECIPE r, member m
				WHERE m.member_id = r.member_id ORDER BY recipe_no DESC)recipe_view
			)rnum_view
		WHERE rnum between #{startRowNumber} and #{endRowNumber}
	</select>
	<!-- category별 recipe 게시물의 List를 rowNumber로 조회 -->
	<select id="getRecipeListByCategory"  resultMap="recipeDetailRM">
		SELECT rnum_view.*
		FROM (
			SELECT ROWNUM as rnum, recipe_view.*
			FROM
				(SELECT r.recipe_no, m.nick, r.recipe_name, hits, r.category, r.recipe_thumbnail
				FROM RECIPE r, member m
				WHERE m.member_id = r.member_id and category=#{category} ORDER BY recipe_no DESC)recipe_view
			)rnum_view
		WHERE rnum between #{startRowNumber} and #{endRowNumber}
	</select>
	
	
	<!-- delete !!테스트 아직 안함!! -->
	<delete id="deleteRecipeByRecipeNo" parameterType="int">
		delete from recipe where recipe_no=#{value}
	</delete>
	<delete id="deleteRecipeItemByRecipeNoAndRecipeItem">
		delete from recipe_item where recipe_no=#{recipeNo} and recipe_item=#{recipeItem}
	</delete>
	<delete id="deleteAllRecipeItemByRecipeNo">
		delete from recipe_item where recipe_no=#{recipeNo}
	</delete>
	<delete id="deleteLastRecipeContentByRecipeNo">
		delete from recipe_content where recipe_no=#{recipeNo}
		and step_no=(SELECT max(step_no) FROM recipe_content where recipe_no=#{recipeNo})
	</delete>
	
	<!-- search -->
	<select id="getRecipeListByWriter" resultType="RecipeVO"  resultMap="recipeDetailRM">
		SELECT  x.* 
		FROM (
			SELECT ROWNUM rn, r.recipe_no, m.nick, m.member_id, r.recipe_name, to_char(r.write_date,'YYYY-MM-DD') as write_date, r.category, r.recipe_thumbnail
			FROM RECIPE r, member m
			WHERE r.member_id = m.member_id AND m.nick = #{keyword} ORDER BY recipe_no DESC)x
		WHERE rn between #{startRowNumber} and #{endRowNumber}
	
	</select>
	
	
	<!-- main page -->
	<select id="getBestRecipeListForMain" resultType="RecipeVO">
		select recipe_no ,recipe_name, category, hits from recipe order by hits desc
	</select>
	<select id="getRecentRecipeListForMain" resultType="RecipeVO">
		select recipe_no ,recipe_name, category, TO_CHAR(write_date, 'YYYY.MM.DD') as write_date from recipe order by write_date desc
	</select>
</mapper>

