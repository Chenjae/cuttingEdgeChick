<?xml version="1.0" encoding="UTF-8"?>
<!-- Sql Mapper -->
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
	<mapper namespace="org.kosta.pamuk.model.mapper.RecipeMapper">
	
	<!-- resultMap setting -->
	<resultMap type="recipeVO" id="recipeRM">
 		<result column="member_id" property="memberVO.memberId"/>
 	</resultMap>
 	<resultMap type="recipeVO" id="recipeDetailRM" extends="recipeRM">
 		<result column="nick" property="memberVO.nick"/>
 	</resultMap>
	
	<!-- recipe 관련 insert문 -->
	<!-- recipe 게시물 작성 -->
	<insert id="postRecipe" parameterType="RecipeVO">
		<selectKey keyProperty="recipeNo" resultType="int"
			order="BEFORE">
			select recipe_seq.nextval from dual
		</selectKey>
		insert into recipe
		(recipe_no,member_id,recipe_name,write_date,category,recipe_thumbnail)
		values
		(#{recipeNo}, #{memberVO.memberId}, #{recipeName}, sysdate, 
		#{category}, #{recipeThumbnail})
	</insert>
	<!-- recipe 게시물의 세부 content(step) 작성 -->
	<insert id="postRecipeContent" parameterType="recipeContentVO">
		insert into
		recipe_content
		(recipe_no, step_no, step_title, content, image_path)
		values (#{recipeNo}, #{stepNo}, #{stepTitle}, #{content},
		#{imagePath})
	</insert>
	<!-- recipe에 사용되는 재료 작성 -->
	<insert id="postRecipeItem" parameterType="RecipeItemVO">
		insert into
		recipe_item
		(item_name, recipe_no, qty)
		values (#{itemName},
		#{recipeNo}, #{qty})
	</insert>

	<!-- recipe 관련 select문 -->
	<!-- count 개수 조회 -->
	<!-- recipe 게시물 수 조회 -->
	<select id="getTotalRecipeCount" resultType="int">
		select count(*) from recipe
	</select>
	<!-- 카테고리 별 recipe 게시물 수 조회 -->
	<select id="getRecipeCountByCategory" resultType="int">
		select count(*) from recipe where category=#{value}
	</select>
	<!-- 개별 recipe 게시물의 content 수 조회 -->
	<select id="getContentCountByRecipeNo" resultType="int">
		select
		count(*) from recipe_content where recipe_no=#{value}
	</select>
	<!-- 개별 recipe 게시물의 item 수 조회 -->
	<select id="getItemCountByRecipeNo" resultType="int">
		select count(*)
		from recipe_item where recipe_no=#{value}
	</select>

	<!-- recipe 게시물 Detail 조회 -->
	<!-- recipe 게시물의 detail을 조회 -->
	<sql id="selectRecipe">
		select recipe_no,member_id,recipe_name,write_date,category,recipe_thumbnail
		from recipe
	</sql>
	<select id="getRecipeDetailByRecipeNo" resultMap="recipeRM">
		<include refid="selectRecipe"/>
		where recipe_no = #{value}
	</select>
	<!-- recipe 게시물의 ItemList를 조회 -->
	<select id="getRecipeItemListByRecipeNo" resultType="RecipeItemVO">
		select item_name, qty
		from recipe_item
		where recipe_no = #{value}
	</select>
	<!-- recipe 게시물 ContentList를 조회 -->
	<select id="getRecipeContentListByRecipeNoOrderByStepNo" resultType="RecipeContentVO">
		select step_no, content, step_title, image_path
		from recipe_content
		where recipe_no = #{value}
		order by step_no
	</select>

	<!-- recipe 게시물의 리스트 조회 -->
	<!-- recipe 게시물의 List를 rowNumber로 조회 -->
	<select id="getAllRecipeListByRowNumber" resultMap="recipeDetailRM">
		SELECT rnum_view.*
		FROM (
			SELECT ROWNUM as rnum, recipe_view.*
			FROM
				(SELECT r.recipe_no, m.nick, r.recipe_name, hits, r.category, r.recipe_thumbnail
				FROM RECIPE r, member m
				WHERE m.member_id = r.member_id ORDER BY recipe_no DESC)recipe_view
			)rnum_view
		WHERE rnum between #{startRowNumber} and #{endRowNumber}
	</select>
	<!-- category별 recipe 게시물의 List를 rowNumber로 조회 -->
	<select id="getRecipeListByCategory"  resultMap="recipeDetailRM">
		SELECT rnum_view.*
		FROM (
			SELECT ROWNUM as rnum, recipe_view.*
			FROM
				(SELECT r.recipe_no, m.nick, r.recipe_name, hits, r.category, r.recipe_thumbnail
				FROM RECIPE r, member m
				WHERE m.member_id = r.member_id and category=#{category} ORDER BY recipe_no DESC)recipe_view
			)rnum_view
		WHERE rnum between #{startRowNumber} and #{endRowNumber}
	</select>
	
	
	<!-- delete !!테스트 아직 안함!! -->
	<delete id="deleteRecipeByRecipeNo" parameterType="int">
		delete from recipe where recipe_no=#{value}
	</delete>
	<delete id="deleteRecipeItemByRecipeNoAndRecipeItem">
		delete from recipe_item where recipe_no=#{recipeNo} and recipe_item=#{recipeItem}
	</delete>
	<delete id="deleteAllRecipeItemByRecipeNo">
		delete from recipe_item where recipe_no=#{recipeNo}
	</delete>
	<delete id="deleteLastRecipeContentByRecipeNo">
		delete from recipe_content where recipe_no=#{recipeNo}
		and step_no=(SELECT max(step_no) FROM recipe_content where recipe_no=#{recipeNo})
	</delete>
	
	<!-- search -->
	<!-- 검색 결과 count 관련 -->
	<select id="getRecipeListByWriterCount" resultType="int">
		select count(*) 
		from RECIPE r, member m 
		where r.member_id = m.member_id 
		AND m.nick IN (#{keyword})
	</select>
	<select id="getRecipeListByItemsCount" resultType="int">
		select count(*) from RECIPE_ITEM where item_name IN (#{keyword})
	</select>
	<select id="getRecipeListByRecipesCount" resultType="int">
		select count(*)
		from 
		(
			select DISTINCT r.recipe_no ,r.recipe_name, r.category, TO_CHAR(r.write_date, 'YYYY.MM.DD') as write_date
			from RECIPE r, RECIPE_CONTENT rc
			where r.recipe_no = rc.recipe_no AND (r.recipe_name LIKE '%' || #{keyword} || '%' OR rc.step_title LIKE '%' || #{keyword} || '%' OR rc.content LIKE '%' || #{keyword} || '%' )
		)
	</select>
	<!-- search 관련 -->
	<select id="getRecipeListByWriter" resultType="RecipeVO" resultMap="recipeDetailRM">
		select r.recipe_no ,r.recipe_name, r.category, r.recipe_thumbnail, TO_CHAR(r.write_date, 'YYYY.MM.DD') as write_date 
		from RECIPE r, member m 
		where r.member_id = m.member_id 
		AND m.nick IN (#{keyword})
	</select>
	<select id="getRecipeListByItems"  resultType="RecipeVO">
		select r.recipe_no ,r.recipe_name, r.category, r.recipe_thumbnail, ri.item_name, TO_CHAR(r.write_date, 'YYYY.MM.DD') as write_date
		from RECIPE r, RECIPE_ITEM ri
		where r.recipe_no = ri.recipe_no AND ri.item_name IN (#{keyword})
	</select>
	<select id="getRecipeListByRecipes"   resultType="RecipeVO">
 select r.recipe_no, r.recipe_name, r.recipe_thumbnail, r.category, TO_CHAR(r.write_date, 'YYYY.MM.DD') as write_date
   from RECIPE r 
   where r.recipe_name LIKE '%' || #{keyword} || '%' 
   
   union
   
   select r.recipe_no, r.recipe_name, r.recipe_thumbnail, r.category, TO_CHAR(r.write_date, 'YYYY.MM.DD') as write_date
   from RECIPE r, RECIPE_CONTENT rc
   where r.recipe_no = rc.recipe_no and 
         (rc.step_title LIKE '%' || #{keyword} || '%' 
       OR rc.content LIKE '%' || #{keyword} || '%' )
	</select>
	
	
	
	
	<!-- main page -->
	<select id="getBestRecipeListForMain" resultType="RecipeVO">
		select recipe_no ,recipe_name, category, hits, recipe_thumbnail from recipe order by hits desc
	</select>
	<select id="getRecentRecipeListForMain" resultType="RecipeVO">
		select recipe_no ,recipe_name, category, recipe_thumbnail, TO_CHAR(write_date, 'YYYY.MM.DD') as write_date from recipe order by write_date desc
	</select>
	
	<!-- 댓글 -->
	<insert id="writeReview">
		insert into review(member_id, recipe_no, review_comment, rating, review_date) 
		values(#{memberId}, #{recipeNo}, #{reviewComment}, #{rating}, sysdate)
	</insert>
	
	<resultMap type="reviewVO" id="reviewRM">
 		<result column="member_id" property="memberVO.memberId"/>
 		<result column="recipe_no" property="recipeVO.recipeNo"/>
 	</resultMap>
	<select id="readReview" resultMap="reviewRM">
		select member_id, recipe_no, review_comment, rating, to_char(review_date, 'yyyy-mm-dd hh24:mi') as review_date 
		from review where recipe_no=#{recipeNo} order by review_date asc
	</select>
</mapper>

